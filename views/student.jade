extends layout

block extraHeader
    script(type='text/javascript', src="https://code.highcharts.com/highcharts.js")
    script(type='text/javascript', src="https://code.highcharts.com/modules/heatmap.js")
    script(type='text/javascript', src="https://code.highcharts.com/modules/exporting.js")
    link(rel='stylesheet', href='./css/status-indicators.css')
    script(src='./js/status-indicators.js')

block content
  h1 Student
    div.pull-right
      if isAllowed('students', 'post')
        form.form-horizontal(action='./student/reset', method='POST')
          .form-group.floatLeft
            input(type='hidden', name='_csrf', value=_csrf)
            input(type='hidden', name='studentId', value='#{student.id}')
            button.btn.btn-danger(type='submit' name='action' value='resetModel')
              i.fa.fa-trash
              | Reset Model
      if isAllowed('students', 'post')
        form.form-horizontal(action='./student/delete', method='POST')
          .form-group.floatLeft
            input(type='hidden', name='_csrf', value=_csrf)
            input(type='hidden', name='studentId', value='#{student.id}')
            button.btn.btn-danger(type='submit' name='action' value='deleteStudent')
              i.fa.fa-trash
              | Delete Student
  h3 #{student.id}
  h4 #{student.classId}
  h4 #{student.groupId}
  h4
    a(href='./sessions?studentId=#{student.id}') Sessions
    p
    a(href='./student/#{student.id}?view=json') JSON
  div
    table.table.table-striped
      thead
        tr
          th Concept ID
          th Probability Learned
          th L0
          th % Correct
          th Total Correct
          th Total Attempts
          th Last Update
      tbody
        for conceptState in student.studentModel.bktConceptStates
          tr
            td #{conceptState.conceptId}
            td.scoreBox #{Math.round(conceptState.probabilityLearned*1000000)/1000000}
            td #{Math.round(conceptState.L0*1000000)/1000000}
            td #{Math.round(((conceptState.totalCorrect / conceptState.totalAttempts)*1000)/10)}
            td #{conceptState.totalCorrect}
            td #{conceptState.totalAttempts}
            td #{moment(conceptState.timestamp).calendar()}